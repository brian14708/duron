[project]
name = "duron"
version = "0.0.1"
description = ""
license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "typing-extensions>=4.15.0",
]

[build-system]
requires = ["uv_build>=0.8.19,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "pydantic>=2.11.9",
    "pytest>=7.0",
    "pytest-asyncio>=0.21",
    "pytest-codspeed>=4.1.1",
]
type-checking = [
    "basedmypy>=2.10.0",
    "basedpyright>=1.31.2",
]
lint = [
    "ruff>=0.12.8",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.18",
    "mkdocs-mermaid2-plugin>=1.2.1",
    "mkdocstrings[python]>=0.30.0",
]
examples = [
    "pydantic>=2.11.9",
    "openai>=2.2.0",
    "rich>=14.1.0",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812",
    "CPY", "D",
    "PLR0", "PLR1", "PLR2", "C901",
]
extend-safe-fixes = ["TC"]
preview = true
future-annotations = true

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "S311"]
"examples/**/*.py" = ["T201", "S311"]

[tool.ruff.lint.isort]
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["typing_extensions.TypedDict"]
runtime-evaluated-decorators = ["duron.fn", "duron.op"]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"typing.TypedDict".msg = "Use typing_extensions.TypedDict instead."

[tool.ruff.format]
preview = true
docstring-code-format = true

[tool.mypy]
disable_error_code = [
    "decorated-any",
    "explicit-any",
    "any",
]

[tool.pyright]
venv = "."
venvPath = ".venv"
enableExperimentalFeatures = true
reportAny = false
reportExplicitAny = false
reportUnreachable = false
reportImportCycles = false
